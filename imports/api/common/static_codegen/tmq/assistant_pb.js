// source: tmq/assistant.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
goog.exportSymbol('proto.tmq.AllAssistants', null, global);
goog.exportSymbol('proto.tmq.AllVoices', null, global);
goog.exportSymbol('proto.tmq.AssistantConfigRequest', null, global);
goog.exportSymbol('proto.tmq.AssistantConfigResponse', null, global);
goog.exportSymbol('proto.tmq.AssistantRequest', null, global);
goog.exportSymbol('proto.tmq.AssistantResponse', null, global);
goog.exportSymbol('proto.tmq.FetchAssistantRequest', null, global);
goog.exportSymbol('proto.tmq.FetchAssistantResponse', null, global);
goog.exportSymbol('proto.tmq.FetchVoicesRequest', null, global);
goog.exportSymbol('proto.tmq.FetchVoicesResponse', null, global);
goog.exportSymbol('proto.tmq.KnowledgeBase', null, global);
goog.exportSymbol('proto.tmq.Model', null, global);
goog.exportSymbol('proto.tmq.Tool', null, global);
goog.exportSymbol('proto.tmq.Transcriber', null, global);
goog.exportSymbol('proto.tmq.Voice', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tmq.Model = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tmq.Model, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tmq.Model.displayName = 'proto.tmq.Model';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tmq.Voice = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tmq.Voice, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tmq.Voice.displayName = 'proto.tmq.Voice';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tmq.KnowledgeBase = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tmq.KnowledgeBase, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tmq.KnowledgeBase.displayName = 'proto.tmq.KnowledgeBase';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tmq.Transcriber = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tmq.Transcriber, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tmq.Transcriber.displayName = 'proto.tmq.Transcriber';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tmq.Tool = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tmq.Tool, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tmq.Tool.displayName = 'proto.tmq.Tool';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tmq.AssistantRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tmq.AssistantRequest.repeatedFields_, null);
};
goog.inherits(proto.tmq.AssistantRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tmq.AssistantRequest.displayName = 'proto.tmq.AssistantRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tmq.AssistantResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tmq.AssistantResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tmq.AssistantResponse.displayName = 'proto.tmq.AssistantResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tmq.FetchAssistantRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tmq.FetchAssistantRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tmq.FetchAssistantRequest.displayName = 'proto.tmq.FetchAssistantRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tmq.AllAssistants = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tmq.AllAssistants.repeatedFields_, null);
};
goog.inherits(proto.tmq.AllAssistants, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tmq.AllAssistants.displayName = 'proto.tmq.AllAssistants';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tmq.FetchAssistantResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tmq.FetchAssistantResponse.repeatedFields_, null);
};
goog.inherits(proto.tmq.FetchAssistantResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tmq.FetchAssistantResponse.displayName = 'proto.tmq.FetchAssistantResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tmq.AssistantConfigRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tmq.AssistantConfigRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tmq.AssistantConfigRequest.displayName = 'proto.tmq.AssistantConfigRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tmq.AssistantConfigResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tmq.AssistantConfigResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tmq.AssistantConfigResponse.displayName = 'proto.tmq.AssistantConfigResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tmq.AllVoices = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tmq.AllVoices, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tmq.AllVoices.displayName = 'proto.tmq.AllVoices';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tmq.FetchVoicesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tmq.FetchVoicesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tmq.FetchVoicesRequest.displayName = 'proto.tmq.FetchVoicesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tmq.FetchVoicesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tmq.FetchVoicesResponse.repeatedFields_, null);
};
goog.inherits(proto.tmq.FetchVoicesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tmq.FetchVoicesResponse.displayName = 'proto.tmq.FetchVoicesResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tmq.Model.prototype.toObject = function(opt_includeInstance) {
  return proto.tmq.Model.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tmq.Model} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.Model.toObject = function(includeInstance, msg) {
  var f, obj = {
    provider: jspb.Message.getFieldWithDefault(msg, 1, ""),
    model: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tmq.Model}
 */
proto.tmq.Model.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tmq.Model;
  return proto.tmq.Model.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tmq.Model} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tmq.Model}
 */
proto.tmq.Model.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvider(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tmq.Model.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tmq.Model.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tmq.Model} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.Model.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProvider();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string provider = 1;
 * @return {string}
 */
proto.tmq.Model.prototype.getProvider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.Model} returns this
 */
proto.tmq.Model.prototype.setProvider = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string model = 2;
 * @return {string}
 */
proto.tmq.Model.prototype.getModel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.Model} returns this
 */
proto.tmq.Model.prototype.setModel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tmq.Voice.prototype.toObject = function(opt_includeInstance) {
  return proto.tmq.Voice.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tmq.Voice} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.Voice.toObject = function(includeInstance, msg) {
  var f, obj = {
    provider: jspb.Message.getFieldWithDefault(msg, 1, ""),
    voiceid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tmq.Voice}
 */
proto.tmq.Voice.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tmq.Voice;
  return proto.tmq.Voice.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tmq.Voice} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tmq.Voice}
 */
proto.tmq.Voice.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvider(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVoiceid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tmq.Voice.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tmq.Voice.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tmq.Voice} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.Voice.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProvider();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVoiceid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string provider = 1;
 * @return {string}
 */
proto.tmq.Voice.prototype.getProvider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.Voice} returns this
 */
proto.tmq.Voice.prototype.setProvider = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string voiceId = 2;
 * @return {string}
 */
proto.tmq.Voice.prototype.getVoiceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.Voice} returns this
 */
proto.tmq.Voice.prototype.setVoiceid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.tmq.Voice.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.Voice} returns this
 */
proto.tmq.Voice.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tmq.KnowledgeBase.prototype.toObject = function(opt_includeInstance) {
  return proto.tmq.KnowledgeBase.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tmq.KnowledgeBase} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.KnowledgeBase.toObject = function(includeInstance, msg) {
  var f, obj = {
    provider: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tmq.KnowledgeBase}
 */
proto.tmq.KnowledgeBase.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tmq.KnowledgeBase;
  return proto.tmq.KnowledgeBase.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tmq.KnowledgeBase} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tmq.KnowledgeBase}
 */
proto.tmq.KnowledgeBase.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvider(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tmq.KnowledgeBase.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tmq.KnowledgeBase.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tmq.KnowledgeBase} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.KnowledgeBase.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProvider();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string provider = 1;
 * @return {string}
 */
proto.tmq.KnowledgeBase.prototype.getProvider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.KnowledgeBase} returns this
 */
proto.tmq.KnowledgeBase.prototype.setProvider = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.tmq.KnowledgeBase.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.KnowledgeBase} returns this
 */
proto.tmq.KnowledgeBase.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tmq.Transcriber.prototype.toObject = function(opt_includeInstance) {
  return proto.tmq.Transcriber.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tmq.Transcriber} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.Transcriber.toObject = function(includeInstance, msg) {
  var f, obj = {
    provider: jspb.Message.getFieldWithDefault(msg, 1, ""),
    model: jspb.Message.getFieldWithDefault(msg, 2, ""),
    language: jspb.Message.getFieldWithDefault(msg, 3, ""),
    smartformat: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tmq.Transcriber}
 */
proto.tmq.Transcriber.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tmq.Transcriber;
  return proto.tmq.Transcriber.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tmq.Transcriber} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tmq.Transcriber}
 */
proto.tmq.Transcriber.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvider(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModel(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguage(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSmartformat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tmq.Transcriber.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tmq.Transcriber.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tmq.Transcriber} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.Transcriber.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProvider();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLanguage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSmartformat();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string provider = 1;
 * @return {string}
 */
proto.tmq.Transcriber.prototype.getProvider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.Transcriber} returns this
 */
proto.tmq.Transcriber.prototype.setProvider = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string model = 2;
 * @return {string}
 */
proto.tmq.Transcriber.prototype.getModel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.Transcriber} returns this
 */
proto.tmq.Transcriber.prototype.setModel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string language = 3;
 * @return {string}
 */
proto.tmq.Transcriber.prototype.getLanguage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.Transcriber} returns this
 */
proto.tmq.Transcriber.prototype.setLanguage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool smartFormat = 4;
 * @return {boolean}
 */
proto.tmq.Transcriber.prototype.getSmartformat = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tmq.Transcriber} returns this
 */
proto.tmq.Transcriber.prototype.setSmartformat = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tmq.Tool.prototype.toObject = function(opt_includeInstance) {
  return proto.tmq.Tool.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tmq.Tool} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.Tool.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pb_function: (f = msg.getFunction()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    serverurl: jspb.Message.getFieldWithDefault(msg, 5, ""),
    token: jspb.Message.getFieldWithDefault(msg, 6, ""),
    timeout: jspb.Message.getFieldWithDefault(msg, 7, 0),
    headersMap: (f = msg.getHeadersMap()) ? f.toObject(includeInstance, undefined) : [],
    async: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    messagesMap: (f = msg.getMessagesMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tmq.Tool}
 */
proto.tmq.Tool.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tmq.Tool;
  return proto.tmq.Tool.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tmq.Tool} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tmq.Tool}
 */
proto.tmq.Tool.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setFunction(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setServerurl(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTimeout(value);
      break;
    case 8:
      var value = msg.getHeadersMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAsync(value);
      break;
    case 10:
      var value = msg.getMessagesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tmq.Tool.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tmq.Tool.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tmq.Tool} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.Tool.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFunction();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getServerurl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTimeout();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getHeadersMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(8, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getAsync();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getMessagesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(10, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.tmq.Tool.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.Tool} returns this
 */
proto.tmq.Tool.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Struct function = 2;
 * @return {?proto.google.protobuf.Struct}
 */
proto.tmq.Tool.prototype.getFunction = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 2));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.tmq.Tool} returns this
*/
proto.tmq.Tool.prototype.setFunction = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tmq.Tool} returns this
 */
proto.tmq.Tool.prototype.clearFunction = function() {
  return this.setFunction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tmq.Tool.prototype.hasFunction = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.tmq.Tool.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.Tool} returns this
 */
proto.tmq.Tool.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.tmq.Tool.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.Tool} returns this
 */
proto.tmq.Tool.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string serverUrl = 5;
 * @return {string}
 */
proto.tmq.Tool.prototype.getServerurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.Tool} returns this
 */
proto.tmq.Tool.prototype.setServerurl = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string token = 6;
 * @return {string}
 */
proto.tmq.Tool.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.Tool} returns this
 */
proto.tmq.Tool.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 timeout = 7;
 * @return {number}
 */
proto.tmq.Tool.prototype.getTimeout = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.tmq.Tool} returns this
 */
proto.tmq.Tool.prototype.setTimeout = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * map<string, string> headers = 8;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.tmq.Tool.prototype.getHeadersMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 8, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.tmq.Tool} returns this
 */
proto.tmq.Tool.prototype.clearHeadersMap = function() {
  this.getHeadersMap().clear();
  return this;};


/**
 * optional bool async = 9;
 * @return {boolean}
 */
proto.tmq.Tool.prototype.getAsync = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tmq.Tool} returns this
 */
proto.tmq.Tool.prototype.setAsync = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * map<string, string> messages = 10;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.tmq.Tool.prototype.getMessagesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 10, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.tmq.Tool} returns this
 */
proto.tmq.Tool.prototype.clearMessagesMap = function() {
  this.getMessagesMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tmq.AssistantRequest.repeatedFields_ = [14,15];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tmq.AssistantRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tmq.AssistantRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tmq.AssistantRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.AssistantRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    businessid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    assistantid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    assistantidllm: jspb.Message.getFieldWithDefault(msg, 5, ""),
    model: (f = msg.getModel()) && proto.tmq.Model.toObject(includeInstance, f),
    voice: (f = msg.getVoice()) && proto.tmq.Voice.toObject(includeInstance, f),
    metadata: (f = msg.getMetadata()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    description: jspb.Message.getFieldWithDefault(msg, 9, ""),
    firstmessage: jspb.Message.getFieldWithDefault(msg, 10, ""),
    systemmessage: jspb.Message.getFieldWithDefault(msg, 11, ""),
    serverurl: jspb.Message.getFieldWithDefault(msg, 12, ""),
    transcriber: (f = msg.getTranscriber()) && proto.tmq.Transcriber.toObject(includeInstance, f),
    servermessagesList: (f = jspb.Message.getRepeatedField(msg, 14)) == null ? undefined : f,
    toolsList: jspb.Message.toObjectList(msg.getToolsList(),
    proto.tmq.Tool.toObject, includeInstance),
    knowledgebase: (f = msg.getKnowledgebase()) && proto.tmq.KnowledgeBase.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tmq.AssistantRequest}
 */
proto.tmq.AssistantRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tmq.AssistantRequest;
  return proto.tmq.AssistantRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tmq.AssistantRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tmq.AssistantRequest}
 */
proto.tmq.AssistantRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssistantid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssistantidllm(value);
      break;
    case 6:
      var value = new proto.tmq.Model;
      reader.readMessage(value,proto.tmq.Model.deserializeBinaryFromReader);
      msg.setModel(value);
      break;
    case 7:
      var value = new proto.tmq.Voice;
      reader.readMessage(value,proto.tmq.Voice.deserializeBinaryFromReader);
      msg.setVoice(value);
      break;
    case 8:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstmessage(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setSystemmessage(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setServerurl(value);
      break;
    case 13:
      var value = new proto.tmq.Transcriber;
      reader.readMessage(value,proto.tmq.Transcriber.deserializeBinaryFromReader);
      msg.setTranscriber(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.addServermessages(value);
      break;
    case 15:
      var value = new proto.tmq.Tool;
      reader.readMessage(value,proto.tmq.Tool.deserializeBinaryFromReader);
      msg.addTools(value);
      break;
    case 16:
      var value = new proto.tmq.KnowledgeBase;
      reader.readMessage(value,proto.tmq.KnowledgeBase.deserializeBinaryFromReader);
      msg.setKnowledgebase(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tmq.AssistantRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tmq.AssistantRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tmq.AssistantRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.AssistantRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBusinessid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAssistantid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAssistantidllm();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getModel();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.tmq.Model.serializeBinaryToWriter
    );
  }
  f = message.getVoice();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.tmq.Voice.serializeBinaryToWriter
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getFirstmessage();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getSystemmessage();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getServerurl();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getTranscriber();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.tmq.Transcriber.serializeBinaryToWriter
    );
  }
  f = message.getServermessagesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      14,
      f
    );
  }
  f = message.getToolsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      15,
      f,
      proto.tmq.Tool.serializeBinaryToWriter
    );
  }
  f = message.getKnowledgebase();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.tmq.KnowledgeBase.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.tmq.AssistantRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.AssistantRequest} returns this
 */
proto.tmq.AssistantRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string userId = 2;
 * @return {string}
 */
proto.tmq.AssistantRequest.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.AssistantRequest} returns this
 */
proto.tmq.AssistantRequest.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string businessId = 3;
 * @return {string}
 */
proto.tmq.AssistantRequest.prototype.getBusinessid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.AssistantRequest} returns this
 */
proto.tmq.AssistantRequest.prototype.setBusinessid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string assistantId = 4;
 * @return {string}
 */
proto.tmq.AssistantRequest.prototype.getAssistantid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.AssistantRequest} returns this
 */
proto.tmq.AssistantRequest.prototype.setAssistantid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string assistantIdLlm = 5;
 * @return {string}
 */
proto.tmq.AssistantRequest.prototype.getAssistantidllm = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.AssistantRequest} returns this
 */
proto.tmq.AssistantRequest.prototype.setAssistantidllm = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional Model model = 6;
 * @return {?proto.tmq.Model}
 */
proto.tmq.AssistantRequest.prototype.getModel = function() {
  return /** @type{?proto.tmq.Model} */ (
    jspb.Message.getWrapperField(this, proto.tmq.Model, 6));
};


/**
 * @param {?proto.tmq.Model|undefined} value
 * @return {!proto.tmq.AssistantRequest} returns this
*/
proto.tmq.AssistantRequest.prototype.setModel = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tmq.AssistantRequest} returns this
 */
proto.tmq.AssistantRequest.prototype.clearModel = function() {
  return this.setModel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tmq.AssistantRequest.prototype.hasModel = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Voice voice = 7;
 * @return {?proto.tmq.Voice}
 */
proto.tmq.AssistantRequest.prototype.getVoice = function() {
  return /** @type{?proto.tmq.Voice} */ (
    jspb.Message.getWrapperField(this, proto.tmq.Voice, 7));
};


/**
 * @param {?proto.tmq.Voice|undefined} value
 * @return {!proto.tmq.AssistantRequest} returns this
*/
proto.tmq.AssistantRequest.prototype.setVoice = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tmq.AssistantRequest} returns this
 */
proto.tmq.AssistantRequest.prototype.clearVoice = function() {
  return this.setVoice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tmq.AssistantRequest.prototype.hasVoice = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.Struct metadata = 8;
 * @return {?proto.google.protobuf.Struct}
 */
proto.tmq.AssistantRequest.prototype.getMetadata = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 8));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.tmq.AssistantRequest} returns this
*/
proto.tmq.AssistantRequest.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tmq.AssistantRequest} returns this
 */
proto.tmq.AssistantRequest.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tmq.AssistantRequest.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string description = 9;
 * @return {string}
 */
proto.tmq.AssistantRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.AssistantRequest} returns this
 */
proto.tmq.AssistantRequest.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string firstMessage = 10;
 * @return {string}
 */
proto.tmq.AssistantRequest.prototype.getFirstmessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.AssistantRequest} returns this
 */
proto.tmq.AssistantRequest.prototype.setFirstmessage = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string systemMessage = 11;
 * @return {string}
 */
proto.tmq.AssistantRequest.prototype.getSystemmessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.AssistantRequest} returns this
 */
proto.tmq.AssistantRequest.prototype.setSystemmessage = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string serverUrl = 12;
 * @return {string}
 */
proto.tmq.AssistantRequest.prototype.getServerurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.AssistantRequest} returns this
 */
proto.tmq.AssistantRequest.prototype.setServerurl = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional Transcriber transcriber = 13;
 * @return {?proto.tmq.Transcriber}
 */
proto.tmq.AssistantRequest.prototype.getTranscriber = function() {
  return /** @type{?proto.tmq.Transcriber} */ (
    jspb.Message.getWrapperField(this, proto.tmq.Transcriber, 13));
};


/**
 * @param {?proto.tmq.Transcriber|undefined} value
 * @return {!proto.tmq.AssistantRequest} returns this
*/
proto.tmq.AssistantRequest.prototype.setTranscriber = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tmq.AssistantRequest} returns this
 */
proto.tmq.AssistantRequest.prototype.clearTranscriber = function() {
  return this.setTranscriber(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tmq.AssistantRequest.prototype.hasTranscriber = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * repeated string serverMessages = 14;
 * @return {!Array<string>}
 */
proto.tmq.AssistantRequest.prototype.getServermessagesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 14));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.tmq.AssistantRequest} returns this
 */
proto.tmq.AssistantRequest.prototype.setServermessagesList = function(value) {
  return jspb.Message.setField(this, 14, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.tmq.AssistantRequest} returns this
 */
proto.tmq.AssistantRequest.prototype.addServermessages = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 14, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tmq.AssistantRequest} returns this
 */
proto.tmq.AssistantRequest.prototype.clearServermessagesList = function() {
  return this.setServermessagesList([]);
};


/**
 * repeated Tool tools = 15;
 * @return {!Array<!proto.tmq.Tool>}
 */
proto.tmq.AssistantRequest.prototype.getToolsList = function() {
  return /** @type{!Array<!proto.tmq.Tool>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tmq.Tool, 15));
};


/**
 * @param {!Array<!proto.tmq.Tool>} value
 * @return {!proto.tmq.AssistantRequest} returns this
*/
proto.tmq.AssistantRequest.prototype.setToolsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 15, value);
};


/**
 * @param {!proto.tmq.Tool=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tmq.Tool}
 */
proto.tmq.AssistantRequest.prototype.addTools = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 15, opt_value, proto.tmq.Tool, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tmq.AssistantRequest} returns this
 */
proto.tmq.AssistantRequest.prototype.clearToolsList = function() {
  return this.setToolsList([]);
};


/**
 * optional KnowledgeBase knowledgeBase = 16;
 * @return {?proto.tmq.KnowledgeBase}
 */
proto.tmq.AssistantRequest.prototype.getKnowledgebase = function() {
  return /** @type{?proto.tmq.KnowledgeBase} */ (
    jspb.Message.getWrapperField(this, proto.tmq.KnowledgeBase, 16));
};


/**
 * @param {?proto.tmq.KnowledgeBase|undefined} value
 * @return {!proto.tmq.AssistantRequest} returns this
*/
proto.tmq.AssistantRequest.prototype.setKnowledgebase = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tmq.AssistantRequest} returns this
 */
proto.tmq.AssistantRequest.prototype.clearKnowledgebase = function() {
  return this.setKnowledgebase(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tmq.AssistantRequest.prototype.hasKnowledgebase = function() {
  return jspb.Message.getField(this, 16) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tmq.AssistantResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tmq.AssistantResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tmq.AssistantResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.AssistantResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tmq.AssistantResponse}
 */
proto.tmq.AssistantResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tmq.AssistantResponse;
  return proto.tmq.AssistantResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tmq.AssistantResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tmq.AssistantResponse}
 */
proto.tmq.AssistantResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tmq.AssistantResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tmq.AssistantResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tmq.AssistantResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.AssistantResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.tmq.AssistantResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tmq.AssistantResponse} returns this
 */
proto.tmq.AssistantResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.tmq.AssistantResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.AssistantResponse} returns this
 */
proto.tmq.AssistantResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tmq.FetchAssistantRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tmq.FetchAssistantRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tmq.FetchAssistantRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.FetchAssistantRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    lastbasis: jspb.Message.getFieldWithDefault(msg, 1, 0),
    keywords: jspb.Message.getFieldWithDefault(msg, 2, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tmq.FetchAssistantRequest}
 */
proto.tmq.FetchAssistantRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tmq.FetchAssistantRequest;
  return proto.tmq.FetchAssistantRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tmq.FetchAssistantRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tmq.FetchAssistantRequest}
 */
proto.tmq.FetchAssistantRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastbasis(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeywords(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tmq.FetchAssistantRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tmq.FetchAssistantRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tmq.FetchAssistantRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.FetchAssistantRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLastbasis();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getKeywords();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int64 lastBasis = 1;
 * @return {number}
 */
proto.tmq.FetchAssistantRequest.prototype.getLastbasis = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.tmq.FetchAssistantRequest} returns this
 */
proto.tmq.FetchAssistantRequest.prototype.setLastbasis = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string keywords = 2;
 * @return {string}
 */
proto.tmq.FetchAssistantRequest.prototype.getKeywords = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.FetchAssistantRequest} returns this
 */
proto.tmq.FetchAssistantRequest.prototype.setKeywords = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string userId = 3;
 * @return {string}
 */
proto.tmq.FetchAssistantRequest.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.FetchAssistantRequest} returns this
 */
proto.tmq.FetchAssistantRequest.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tmq.AllAssistants.repeatedFields_ = [17,18];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tmq.AllAssistants.prototype.toObject = function(opt_includeInstance) {
  return proto.tmq.AllAssistants.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tmq.AllAssistants} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.AllAssistants.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    businessid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    assistantid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    assistantidllm: jspb.Message.getFieldWithDefault(msg, 6, ""),
    model: (f = msg.getModel()) && proto.tmq.Model.toObject(includeInstance, f),
    voice: (f = msg.getVoice()) && proto.tmq.Voice.toObject(includeInstance, f),
    metadata: (f = msg.getMetadata()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    createdat: jspb.Message.getFieldWithDefault(msg, 10, 0),
    updatedat: jspb.Message.getFieldWithDefault(msg, 11, 0),
    description: jspb.Message.getFieldWithDefault(msg, 12, ""),
    firstmessage: jspb.Message.getFieldWithDefault(msg, 13, ""),
    systemmessage: jspb.Message.getFieldWithDefault(msg, 14, ""),
    serverurl: jspb.Message.getFieldWithDefault(msg, 15, ""),
    transcriber: (f = msg.getTranscriber()) && proto.tmq.Transcriber.toObject(includeInstance, f),
    servermessagesList: (f = jspb.Message.getRepeatedField(msg, 17)) == null ? undefined : f,
    toolsList: jspb.Message.toObjectList(msg.getToolsList(),
    proto.tmq.Tool.toObject, includeInstance),
    knowledgebase: (f = msg.getKnowledgebase()) && proto.tmq.KnowledgeBase.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tmq.AllAssistants}
 */
proto.tmq.AllAssistants.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tmq.AllAssistants;
  return proto.tmq.AllAssistants.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tmq.AllAssistants} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tmq.AllAssistants}
 */
proto.tmq.AllAssistants.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssistantid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssistantidllm(value);
      break;
    case 7:
      var value = new proto.tmq.Model;
      reader.readMessage(value,proto.tmq.Model.deserializeBinaryFromReader);
      msg.setModel(value);
      break;
    case 8:
      var value = new proto.tmq.Voice;
      reader.readMessage(value,proto.tmq.Voice.deserializeBinaryFromReader);
      msg.setVoice(value);
      break;
    case 9:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedat(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedat(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstmessage(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setSystemmessage(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setServerurl(value);
      break;
    case 16:
      var value = new proto.tmq.Transcriber;
      reader.readMessage(value,proto.tmq.Transcriber.deserializeBinaryFromReader);
      msg.setTranscriber(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.addServermessages(value);
      break;
    case 18:
      var value = new proto.tmq.Tool;
      reader.readMessage(value,proto.tmq.Tool.deserializeBinaryFromReader);
      msg.addTools(value);
      break;
    case 19:
      var value = new proto.tmq.KnowledgeBase;
      reader.readMessage(value,proto.tmq.KnowledgeBase.deserializeBinaryFromReader);
      msg.setKnowledgebase(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tmq.AllAssistants.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tmq.AllAssistants.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tmq.AllAssistants} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.AllAssistants.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBusinessid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAssistantid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getAssistantidllm();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getModel();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.tmq.Model.serializeBinaryToWriter
    );
  }
  f = message.getVoice();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.tmq.Voice.serializeBinaryToWriter
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getCreatedat();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getUpdatedat();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getFirstmessage();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getSystemmessage();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getServerurl();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getTranscriber();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.tmq.Transcriber.serializeBinaryToWriter
    );
  }
  f = message.getServermessagesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      17,
      f
    );
  }
  f = message.getToolsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      18,
      f,
      proto.tmq.Tool.serializeBinaryToWriter
    );
  }
  f = message.getKnowledgebase();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.tmq.KnowledgeBase.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.tmq.AllAssistants.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.AllAssistants} returns this
 */
proto.tmq.AllAssistants.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.tmq.AllAssistants.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.AllAssistants} returns this
 */
proto.tmq.AllAssistants.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string userId = 3;
 * @return {string}
 */
proto.tmq.AllAssistants.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.AllAssistants} returns this
 */
proto.tmq.AllAssistants.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string businessId = 4;
 * @return {string}
 */
proto.tmq.AllAssistants.prototype.getBusinessid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.AllAssistants} returns this
 */
proto.tmq.AllAssistants.prototype.setBusinessid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string assistantId = 5;
 * @return {string}
 */
proto.tmq.AllAssistants.prototype.getAssistantid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.AllAssistants} returns this
 */
proto.tmq.AllAssistants.prototype.setAssistantid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string assistantIdLlm = 6;
 * @return {string}
 */
proto.tmq.AllAssistants.prototype.getAssistantidllm = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.AllAssistants} returns this
 */
proto.tmq.AllAssistants.prototype.setAssistantidllm = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional Model model = 7;
 * @return {?proto.tmq.Model}
 */
proto.tmq.AllAssistants.prototype.getModel = function() {
  return /** @type{?proto.tmq.Model} */ (
    jspb.Message.getWrapperField(this, proto.tmq.Model, 7));
};


/**
 * @param {?proto.tmq.Model|undefined} value
 * @return {!proto.tmq.AllAssistants} returns this
*/
proto.tmq.AllAssistants.prototype.setModel = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tmq.AllAssistants} returns this
 */
proto.tmq.AllAssistants.prototype.clearModel = function() {
  return this.setModel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tmq.AllAssistants.prototype.hasModel = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Voice voice = 8;
 * @return {?proto.tmq.Voice}
 */
proto.tmq.AllAssistants.prototype.getVoice = function() {
  return /** @type{?proto.tmq.Voice} */ (
    jspb.Message.getWrapperField(this, proto.tmq.Voice, 8));
};


/**
 * @param {?proto.tmq.Voice|undefined} value
 * @return {!proto.tmq.AllAssistants} returns this
*/
proto.tmq.AllAssistants.prototype.setVoice = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tmq.AllAssistants} returns this
 */
proto.tmq.AllAssistants.prototype.clearVoice = function() {
  return this.setVoice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tmq.AllAssistants.prototype.hasVoice = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional google.protobuf.Struct metadata = 9;
 * @return {?proto.google.protobuf.Struct}
 */
proto.tmq.AllAssistants.prototype.getMetadata = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 9));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.tmq.AllAssistants} returns this
*/
proto.tmq.AllAssistants.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tmq.AllAssistants} returns this
 */
proto.tmq.AllAssistants.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tmq.AllAssistants.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional int64 createdAt = 10;
 * @return {number}
 */
proto.tmq.AllAssistants.prototype.getCreatedat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.tmq.AllAssistants} returns this
 */
proto.tmq.AllAssistants.prototype.setCreatedat = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int64 updatedAt = 11;
 * @return {number}
 */
proto.tmq.AllAssistants.prototype.getUpdatedat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.tmq.AllAssistants} returns this
 */
proto.tmq.AllAssistants.prototype.setUpdatedat = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional string description = 12;
 * @return {string}
 */
proto.tmq.AllAssistants.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.AllAssistants} returns this
 */
proto.tmq.AllAssistants.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string firstMessage = 13;
 * @return {string}
 */
proto.tmq.AllAssistants.prototype.getFirstmessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.AllAssistants} returns this
 */
proto.tmq.AllAssistants.prototype.setFirstmessage = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string systemMessage = 14;
 * @return {string}
 */
proto.tmq.AllAssistants.prototype.getSystemmessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.AllAssistants} returns this
 */
proto.tmq.AllAssistants.prototype.setSystemmessage = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string serverUrl = 15;
 * @return {string}
 */
proto.tmq.AllAssistants.prototype.getServerurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.AllAssistants} returns this
 */
proto.tmq.AllAssistants.prototype.setServerurl = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional Transcriber transcriber = 16;
 * @return {?proto.tmq.Transcriber}
 */
proto.tmq.AllAssistants.prototype.getTranscriber = function() {
  return /** @type{?proto.tmq.Transcriber} */ (
    jspb.Message.getWrapperField(this, proto.tmq.Transcriber, 16));
};


/**
 * @param {?proto.tmq.Transcriber|undefined} value
 * @return {!proto.tmq.AllAssistants} returns this
*/
proto.tmq.AllAssistants.prototype.setTranscriber = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tmq.AllAssistants} returns this
 */
proto.tmq.AllAssistants.prototype.clearTranscriber = function() {
  return this.setTranscriber(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tmq.AllAssistants.prototype.hasTranscriber = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * repeated string serverMessages = 17;
 * @return {!Array<string>}
 */
proto.tmq.AllAssistants.prototype.getServermessagesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 17));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.tmq.AllAssistants} returns this
 */
proto.tmq.AllAssistants.prototype.setServermessagesList = function(value) {
  return jspb.Message.setField(this, 17, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.tmq.AllAssistants} returns this
 */
proto.tmq.AllAssistants.prototype.addServermessages = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 17, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tmq.AllAssistants} returns this
 */
proto.tmq.AllAssistants.prototype.clearServermessagesList = function() {
  return this.setServermessagesList([]);
};


/**
 * repeated Tool tools = 18;
 * @return {!Array<!proto.tmq.Tool>}
 */
proto.tmq.AllAssistants.prototype.getToolsList = function() {
  return /** @type{!Array<!proto.tmq.Tool>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tmq.Tool, 18));
};


/**
 * @param {!Array<!proto.tmq.Tool>} value
 * @return {!proto.tmq.AllAssistants} returns this
*/
proto.tmq.AllAssistants.prototype.setToolsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 18, value);
};


/**
 * @param {!proto.tmq.Tool=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tmq.Tool}
 */
proto.tmq.AllAssistants.prototype.addTools = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 18, opt_value, proto.tmq.Tool, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tmq.AllAssistants} returns this
 */
proto.tmq.AllAssistants.prototype.clearToolsList = function() {
  return this.setToolsList([]);
};


/**
 * optional KnowledgeBase knowledgeBase = 19;
 * @return {?proto.tmq.KnowledgeBase}
 */
proto.tmq.AllAssistants.prototype.getKnowledgebase = function() {
  return /** @type{?proto.tmq.KnowledgeBase} */ (
    jspb.Message.getWrapperField(this, proto.tmq.KnowledgeBase, 19));
};


/**
 * @param {?proto.tmq.KnowledgeBase|undefined} value
 * @return {!proto.tmq.AllAssistants} returns this
*/
proto.tmq.AllAssistants.prototype.setKnowledgebase = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tmq.AllAssistants} returns this
 */
proto.tmq.AllAssistants.prototype.clearKnowledgebase = function() {
  return this.setKnowledgebase(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tmq.AllAssistants.prototype.hasKnowledgebase = function() {
  return jspb.Message.getField(this, 19) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tmq.FetchAssistantResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tmq.FetchAssistantResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tmq.FetchAssistantResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tmq.FetchAssistantResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.FetchAssistantResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    assistantsList: jspb.Message.toObjectList(msg.getAssistantsList(),
    proto.tmq.AllAssistants.toObject, includeInstance),
    lastbasis: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tmq.FetchAssistantResponse}
 */
proto.tmq.FetchAssistantResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tmq.FetchAssistantResponse;
  return proto.tmq.FetchAssistantResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tmq.FetchAssistantResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tmq.FetchAssistantResponse}
 */
proto.tmq.FetchAssistantResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tmq.AllAssistants;
      reader.readMessage(value,proto.tmq.AllAssistants.deserializeBinaryFromReader);
      msg.addAssistants(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastbasis(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tmq.FetchAssistantResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tmq.FetchAssistantResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tmq.FetchAssistantResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.FetchAssistantResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAssistantsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.tmq.AllAssistants.serializeBinaryToWriter
    );
  }
  f = message.getLastbasis();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * repeated AllAssistants assistants = 1;
 * @return {!Array<!proto.tmq.AllAssistants>}
 */
proto.tmq.FetchAssistantResponse.prototype.getAssistantsList = function() {
  return /** @type{!Array<!proto.tmq.AllAssistants>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tmq.AllAssistants, 1));
};


/**
 * @param {!Array<!proto.tmq.AllAssistants>} value
 * @return {!proto.tmq.FetchAssistantResponse} returns this
*/
proto.tmq.FetchAssistantResponse.prototype.setAssistantsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tmq.AllAssistants=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tmq.AllAssistants}
 */
proto.tmq.FetchAssistantResponse.prototype.addAssistants = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tmq.AllAssistants, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tmq.FetchAssistantResponse} returns this
 */
proto.tmq.FetchAssistantResponse.prototype.clearAssistantsList = function() {
  return this.setAssistantsList([]);
};


/**
 * optional int64 lastBasis = 2;
 * @return {number}
 */
proto.tmq.FetchAssistantResponse.prototype.getLastbasis = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.tmq.FetchAssistantResponse} returns this
 */
proto.tmq.FetchAssistantResponse.prototype.setLastbasis = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tmq.AssistantConfigRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tmq.AssistantConfigRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tmq.AssistantConfigRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.AssistantConfigRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tmq.AssistantConfigRequest}
 */
proto.tmq.AssistantConfigRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tmq.AssistantConfigRequest;
  return proto.tmq.AssistantConfigRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tmq.AssistantConfigRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tmq.AssistantConfigRequest}
 */
proto.tmq.AssistantConfigRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tmq.AssistantConfigRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tmq.AssistantConfigRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tmq.AssistantConfigRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.AssistantConfigRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tmq.AssistantConfigResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tmq.AssistantConfigResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tmq.AssistantConfigResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.AssistantConfigResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    apikey: jspb.Message.getFieldWithDefault(msg, 1, ""),
    serverurl: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tmq.AssistantConfigResponse}
 */
proto.tmq.AssistantConfigResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tmq.AssistantConfigResponse;
  return proto.tmq.AssistantConfigResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tmq.AssistantConfigResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tmq.AssistantConfigResponse}
 */
proto.tmq.AssistantConfigResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setApikey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setServerurl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tmq.AssistantConfigResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tmq.AssistantConfigResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tmq.AssistantConfigResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.AssistantConfigResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApikey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getServerurl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string apiKey = 1;
 * @return {string}
 */
proto.tmq.AssistantConfigResponse.prototype.getApikey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.AssistantConfigResponse} returns this
 */
proto.tmq.AssistantConfigResponse.prototype.setApikey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string serverUrl = 2;
 * @return {string}
 */
proto.tmq.AssistantConfigResponse.prototype.getServerurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.AssistantConfigResponse} returns this
 */
proto.tmq.AssistantConfigResponse.prototype.setServerurl = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tmq.AllVoices.prototype.toObject = function(opt_includeInstance) {
  return proto.tmq.AllVoices.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tmq.AllVoices} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.AllVoices.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    provider: jspb.Message.getFieldWithDefault(msg, 3, ""),
    voiceid: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tmq.AllVoices}
 */
proto.tmq.AllVoices.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tmq.AllVoices;
  return proto.tmq.AllVoices.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tmq.AllVoices} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tmq.AllVoices}
 */
proto.tmq.AllVoices.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvider(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setVoiceid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tmq.AllVoices.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tmq.AllVoices.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tmq.AllVoices} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.AllVoices.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProvider();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getVoiceid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.tmq.AllVoices.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.AllVoices} returns this
 */
proto.tmq.AllVoices.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.tmq.AllVoices.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.AllVoices} returns this
 */
proto.tmq.AllVoices.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string provider = 3;
 * @return {string}
 */
proto.tmq.AllVoices.prototype.getProvider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.AllVoices} returns this
 */
proto.tmq.AllVoices.prototype.setProvider = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string voiceId = 4;
 * @return {string}
 */
proto.tmq.AllVoices.prototype.getVoiceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.AllVoices} returns this
 */
proto.tmq.AllVoices.prototype.setVoiceid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tmq.FetchVoicesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tmq.FetchVoicesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tmq.FetchVoicesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.FetchVoicesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    voiceprovider: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tmq.FetchVoicesRequest}
 */
proto.tmq.FetchVoicesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tmq.FetchVoicesRequest;
  return proto.tmq.FetchVoicesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tmq.FetchVoicesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tmq.FetchVoicesRequest}
 */
proto.tmq.FetchVoicesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVoiceprovider(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tmq.FetchVoicesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tmq.FetchVoicesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tmq.FetchVoicesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.FetchVoicesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVoiceprovider();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string voiceProvider = 1;
 * @return {string}
 */
proto.tmq.FetchVoicesRequest.prototype.getVoiceprovider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.FetchVoicesRequest} returns this
 */
proto.tmq.FetchVoicesRequest.prototype.setVoiceprovider = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tmq.FetchVoicesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tmq.FetchVoicesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tmq.FetchVoicesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tmq.FetchVoicesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.FetchVoicesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    voicesList: jspb.Message.toObjectList(msg.getVoicesList(),
    proto.tmq.AllVoices.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tmq.FetchVoicesResponse}
 */
proto.tmq.FetchVoicesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tmq.FetchVoicesResponse;
  return proto.tmq.FetchVoicesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tmq.FetchVoicesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tmq.FetchVoicesResponse}
 */
proto.tmq.FetchVoicesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tmq.AllVoices;
      reader.readMessage(value,proto.tmq.AllVoices.deserializeBinaryFromReader);
      msg.addVoices(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tmq.FetchVoicesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tmq.FetchVoicesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tmq.FetchVoicesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.FetchVoicesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVoicesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.tmq.AllVoices.serializeBinaryToWriter
    );
  }
};


/**
 * repeated AllVoices voices = 1;
 * @return {!Array<!proto.tmq.AllVoices>}
 */
proto.tmq.FetchVoicesResponse.prototype.getVoicesList = function() {
  return /** @type{!Array<!proto.tmq.AllVoices>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tmq.AllVoices, 1));
};


/**
 * @param {!Array<!proto.tmq.AllVoices>} value
 * @return {!proto.tmq.FetchVoicesResponse} returns this
*/
proto.tmq.FetchVoicesResponse.prototype.setVoicesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tmq.AllVoices=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tmq.AllVoices}
 */
proto.tmq.FetchVoicesResponse.prototype.addVoices = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tmq.AllVoices, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tmq.FetchVoicesResponse} returns this
 */
proto.tmq.FetchVoicesResponse.prototype.clearVoicesList = function() {
  return this.setVoicesList([]);
};


goog.object.extend(exports, proto.tmq);
export default proto.tmq;
