// source: tmq/widgetConfig.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.tmq.AllWidgetConfig', null, global);
goog.exportSymbol('proto.tmq.FetchWidgetConfigRequest', null, global);
goog.exportSymbol('proto.tmq.FetchWidgetConfigResponse', null, global);
goog.exportSymbol('proto.tmq.UpdateWidgetConfigRequest', null, global);
goog.exportSymbol('proto.tmq.WidgetConfigRequest', null, global);
goog.exportSymbol('proto.tmq.WidgetConfigResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tmq.WidgetConfigRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tmq.WidgetConfigRequest.repeatedFields_, null);
};
goog.inherits(proto.tmq.WidgetConfigRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tmq.WidgetConfigRequest.displayName = 'proto.tmq.WidgetConfigRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tmq.FetchWidgetConfigRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tmq.FetchWidgetConfigRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tmq.FetchWidgetConfigRequest.displayName = 'proto.tmq.FetchWidgetConfigRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tmq.UpdateWidgetConfigRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tmq.UpdateWidgetConfigRequest.repeatedFields_, null);
};
goog.inherits(proto.tmq.UpdateWidgetConfigRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tmq.UpdateWidgetConfigRequest.displayName = 'proto.tmq.UpdateWidgetConfigRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tmq.AllWidgetConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tmq.AllWidgetConfig.repeatedFields_, null);
};
goog.inherits(proto.tmq.AllWidgetConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tmq.AllWidgetConfig.displayName = 'proto.tmq.AllWidgetConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tmq.FetchWidgetConfigResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tmq.FetchWidgetConfigResponse.repeatedFields_, null);
};
goog.inherits(proto.tmq.FetchWidgetConfigResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tmq.FetchWidgetConfigResponse.displayName = 'proto.tmq.FetchWidgetConfigResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tmq.WidgetConfigResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tmq.WidgetConfigResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tmq.WidgetConfigResponse.displayName = 'proto.tmq.WidgetConfigResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tmq.WidgetConfigRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tmq.WidgetConfigRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tmq.WidgetConfigRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tmq.WidgetConfigRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.WidgetConfigRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    domainList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    assistantid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    assistantidllm: jspb.Message.getFieldWithDefault(msg, 4, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tmq.WidgetConfigRequest}
 */
proto.tmq.WidgetConfigRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tmq.WidgetConfigRequest;
  return proto.tmq.WidgetConfigRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tmq.WidgetConfigRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tmq.WidgetConfigRequest}
 */
proto.tmq.WidgetConfigRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addDomain(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssistantid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssistantidllm(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tmq.WidgetConfigRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tmq.WidgetConfigRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tmq.WidgetConfigRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.WidgetConfigRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDomainList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getAssistantid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAssistantidllm();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.tmq.WidgetConfigRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.WidgetConfigRequest} returns this
 */
proto.tmq.WidgetConfigRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string domain = 2;
 * @return {!Array<string>}
 */
proto.tmq.WidgetConfigRequest.prototype.getDomainList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.tmq.WidgetConfigRequest} returns this
 */
proto.tmq.WidgetConfigRequest.prototype.setDomainList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.tmq.WidgetConfigRequest} returns this
 */
proto.tmq.WidgetConfigRequest.prototype.addDomain = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tmq.WidgetConfigRequest} returns this
 */
proto.tmq.WidgetConfigRequest.prototype.clearDomainList = function() {
  return this.setDomainList([]);
};


/**
 * optional string assistantId = 3;
 * @return {string}
 */
proto.tmq.WidgetConfigRequest.prototype.getAssistantid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.WidgetConfigRequest} returns this
 */
proto.tmq.WidgetConfigRequest.prototype.setAssistantid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string assistantidllm = 4;
 * @return {string}
 */
proto.tmq.WidgetConfigRequest.prototype.getAssistantidllm = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.WidgetConfigRequest} returns this
 */
proto.tmq.WidgetConfigRequest.prototype.setAssistantidllm = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string userId = 5;
 * @return {string}
 */
proto.tmq.WidgetConfigRequest.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.WidgetConfigRequest} returns this
 */
proto.tmq.WidgetConfigRequest.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tmq.FetchWidgetConfigRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tmq.FetchWidgetConfigRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tmq.FetchWidgetConfigRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.FetchWidgetConfigRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    lastbasis: jspb.Message.getFieldWithDefault(msg, 2, 0),
    searchquery: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tmq.FetchWidgetConfigRequest}
 */
proto.tmq.FetchWidgetConfigRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tmq.FetchWidgetConfigRequest;
  return proto.tmq.FetchWidgetConfigRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tmq.FetchWidgetConfigRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tmq.FetchWidgetConfigRequest}
 */
proto.tmq.FetchWidgetConfigRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastbasis(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearchquery(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tmq.FetchWidgetConfigRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tmq.FetchWidgetConfigRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tmq.FetchWidgetConfigRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.FetchWidgetConfigRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLastbasis();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getSearchquery();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string userId = 1;
 * @return {string}
 */
proto.tmq.FetchWidgetConfigRequest.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.FetchWidgetConfigRequest} returns this
 */
proto.tmq.FetchWidgetConfigRequest.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 lastBasis = 2;
 * @return {number}
 */
proto.tmq.FetchWidgetConfigRequest.prototype.getLastbasis = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.tmq.FetchWidgetConfigRequest} returns this
 */
proto.tmq.FetchWidgetConfigRequest.prototype.setLastbasis = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string searchQuery = 3;
 * @return {string}
 */
proto.tmq.FetchWidgetConfigRequest.prototype.getSearchquery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.FetchWidgetConfigRequest} returns this
 */
proto.tmq.FetchWidgetConfigRequest.prototype.setSearchquery = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tmq.UpdateWidgetConfigRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tmq.UpdateWidgetConfigRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tmq.UpdateWidgetConfigRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tmq.UpdateWidgetConfigRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.UpdateWidgetConfigRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    domainsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    siteid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    assistantidcall: jspb.Message.getFieldWithDefault(msg, 5, ""),
    assistantidllm: jspb.Message.getFieldWithDefault(msg, 6, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 7, ""),
    widgeturl: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tmq.UpdateWidgetConfigRequest}
 */
proto.tmq.UpdateWidgetConfigRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tmq.UpdateWidgetConfigRequest;
  return proto.tmq.UpdateWidgetConfigRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tmq.UpdateWidgetConfigRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tmq.UpdateWidgetConfigRequest}
 */
proto.tmq.UpdateWidgetConfigRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addDomains(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSiteid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssistantidcall(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssistantidllm(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setWidgeturl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tmq.UpdateWidgetConfigRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tmq.UpdateWidgetConfigRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tmq.UpdateWidgetConfigRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.UpdateWidgetConfigRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDomainsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getSiteid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAssistantidcall();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getAssistantidllm();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getWidgeturl();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.tmq.UpdateWidgetConfigRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.UpdateWidgetConfigRequest} returns this
 */
proto.tmq.UpdateWidgetConfigRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.tmq.UpdateWidgetConfigRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.UpdateWidgetConfigRequest} returns this
 */
proto.tmq.UpdateWidgetConfigRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string domains = 3;
 * @return {!Array<string>}
 */
proto.tmq.UpdateWidgetConfigRequest.prototype.getDomainsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.tmq.UpdateWidgetConfigRequest} returns this
 */
proto.tmq.UpdateWidgetConfigRequest.prototype.setDomainsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.tmq.UpdateWidgetConfigRequest} returns this
 */
proto.tmq.UpdateWidgetConfigRequest.prototype.addDomains = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tmq.UpdateWidgetConfigRequest} returns this
 */
proto.tmq.UpdateWidgetConfigRequest.prototype.clearDomainsList = function() {
  return this.setDomainsList([]);
};


/**
 * optional string siteId = 4;
 * @return {string}
 */
proto.tmq.UpdateWidgetConfigRequest.prototype.getSiteid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.UpdateWidgetConfigRequest} returns this
 */
proto.tmq.UpdateWidgetConfigRequest.prototype.setSiteid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string assistantIdCall = 5;
 * @return {string}
 */
proto.tmq.UpdateWidgetConfigRequest.prototype.getAssistantidcall = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.UpdateWidgetConfigRequest} returns this
 */
proto.tmq.UpdateWidgetConfigRequest.prototype.setAssistantidcall = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string assistantIdLlm = 6;
 * @return {string}
 */
proto.tmq.UpdateWidgetConfigRequest.prototype.getAssistantidllm = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.UpdateWidgetConfigRequest} returns this
 */
proto.tmq.UpdateWidgetConfigRequest.prototype.setAssistantidllm = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string userId = 7;
 * @return {string}
 */
proto.tmq.UpdateWidgetConfigRequest.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.UpdateWidgetConfigRequest} returns this
 */
proto.tmq.UpdateWidgetConfigRequest.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string widgetUrl = 8;
 * @return {string}
 */
proto.tmq.UpdateWidgetConfigRequest.prototype.getWidgeturl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.UpdateWidgetConfigRequest} returns this
 */
proto.tmq.UpdateWidgetConfigRequest.prototype.setWidgeturl = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tmq.AllWidgetConfig.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tmq.AllWidgetConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.tmq.AllWidgetConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tmq.AllWidgetConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.AllWidgetConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    domainsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    widgeturl: jspb.Message.getFieldWithDefault(msg, 4, ""),
    siteid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    secret: jspb.Message.getFieldWithDefault(msg, 6, ""),
    assistantidcall: jspb.Message.getFieldWithDefault(msg, 7, ""),
    assistantidllm: jspb.Message.getFieldWithDefault(msg, 8, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 9, ""),
    createdat: jspb.Message.getFieldWithDefault(msg, 10, 0),
    updatedat: jspb.Message.getFieldWithDefault(msg, 11, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tmq.AllWidgetConfig}
 */
proto.tmq.AllWidgetConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tmq.AllWidgetConfig;
  return proto.tmq.AllWidgetConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tmq.AllWidgetConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tmq.AllWidgetConfig}
 */
proto.tmq.AllWidgetConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addDomains(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setWidgeturl(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSiteid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecret(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssistantidcall(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssistantidllm(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedat(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUpdatedat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tmq.AllWidgetConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tmq.AllWidgetConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tmq.AllWidgetConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.AllWidgetConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDomainsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getWidgeturl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSiteid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSecret();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAssistantidcall();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getAssistantidllm();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCreatedat();
  if (f !== 0) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = message.getUpdatedat();
  if (f !== 0) {
    writer.writeUint64(
      11,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.tmq.AllWidgetConfig.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.AllWidgetConfig} returns this
 */
proto.tmq.AllWidgetConfig.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.tmq.AllWidgetConfig.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.AllWidgetConfig} returns this
 */
proto.tmq.AllWidgetConfig.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string domains = 3;
 * @return {!Array<string>}
 */
proto.tmq.AllWidgetConfig.prototype.getDomainsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.tmq.AllWidgetConfig} returns this
 */
proto.tmq.AllWidgetConfig.prototype.setDomainsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.tmq.AllWidgetConfig} returns this
 */
proto.tmq.AllWidgetConfig.prototype.addDomains = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tmq.AllWidgetConfig} returns this
 */
proto.tmq.AllWidgetConfig.prototype.clearDomainsList = function() {
  return this.setDomainsList([]);
};


/**
 * optional string widgetUrl = 4;
 * @return {string}
 */
proto.tmq.AllWidgetConfig.prototype.getWidgeturl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.AllWidgetConfig} returns this
 */
proto.tmq.AllWidgetConfig.prototype.setWidgeturl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string siteId = 5;
 * @return {string}
 */
proto.tmq.AllWidgetConfig.prototype.getSiteid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.AllWidgetConfig} returns this
 */
proto.tmq.AllWidgetConfig.prototype.setSiteid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string secret = 6;
 * @return {string}
 */
proto.tmq.AllWidgetConfig.prototype.getSecret = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.AllWidgetConfig} returns this
 */
proto.tmq.AllWidgetConfig.prototype.setSecret = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string assistantIdCall = 7;
 * @return {string}
 */
proto.tmq.AllWidgetConfig.prototype.getAssistantidcall = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.AllWidgetConfig} returns this
 */
proto.tmq.AllWidgetConfig.prototype.setAssistantidcall = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string assistantIdLlm = 8;
 * @return {string}
 */
proto.tmq.AllWidgetConfig.prototype.getAssistantidllm = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.AllWidgetConfig} returns this
 */
proto.tmq.AllWidgetConfig.prototype.setAssistantidllm = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string userId = 9;
 * @return {string}
 */
proto.tmq.AllWidgetConfig.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.AllWidgetConfig} returns this
 */
proto.tmq.AllWidgetConfig.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional uint64 createdAt = 10;
 * @return {number}
 */
proto.tmq.AllWidgetConfig.prototype.getCreatedat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.tmq.AllWidgetConfig} returns this
 */
proto.tmq.AllWidgetConfig.prototype.setCreatedat = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional uint64 updatedAt = 11;
 * @return {number}
 */
proto.tmq.AllWidgetConfig.prototype.getUpdatedat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.tmq.AllWidgetConfig} returns this
 */
proto.tmq.AllWidgetConfig.prototype.setUpdatedat = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tmq.FetchWidgetConfigResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tmq.FetchWidgetConfigResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tmq.FetchWidgetConfigResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tmq.FetchWidgetConfigResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.FetchWidgetConfigResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    widgetconfigsList: jspb.Message.toObjectList(msg.getWidgetconfigsList(),
    proto.tmq.AllWidgetConfig.toObject, includeInstance),
    lastbasis: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tmq.FetchWidgetConfigResponse}
 */
proto.tmq.FetchWidgetConfigResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tmq.FetchWidgetConfigResponse;
  return proto.tmq.FetchWidgetConfigResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tmq.FetchWidgetConfigResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tmq.FetchWidgetConfigResponse}
 */
proto.tmq.FetchWidgetConfigResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tmq.AllWidgetConfig;
      reader.readMessage(value,proto.tmq.AllWidgetConfig.deserializeBinaryFromReader);
      msg.addWidgetconfigs(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastbasis(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tmq.FetchWidgetConfigResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tmq.FetchWidgetConfigResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tmq.FetchWidgetConfigResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.FetchWidgetConfigResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWidgetconfigsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.tmq.AllWidgetConfig.serializeBinaryToWriter
    );
  }
  f = message.getLastbasis();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * repeated AllWidgetConfig WidgetConfigs = 1;
 * @return {!Array<!proto.tmq.AllWidgetConfig>}
 */
proto.tmq.FetchWidgetConfigResponse.prototype.getWidgetconfigsList = function() {
  return /** @type{!Array<!proto.tmq.AllWidgetConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tmq.AllWidgetConfig, 1));
};


/**
 * @param {!Array<!proto.tmq.AllWidgetConfig>} value
 * @return {!proto.tmq.FetchWidgetConfigResponse} returns this
*/
proto.tmq.FetchWidgetConfigResponse.prototype.setWidgetconfigsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tmq.AllWidgetConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tmq.AllWidgetConfig}
 */
proto.tmq.FetchWidgetConfigResponse.prototype.addWidgetconfigs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tmq.AllWidgetConfig, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tmq.FetchWidgetConfigResponse} returns this
 */
proto.tmq.FetchWidgetConfigResponse.prototype.clearWidgetconfigsList = function() {
  return this.setWidgetconfigsList([]);
};


/**
 * optional int64 lastBasis = 2;
 * @return {number}
 */
proto.tmq.FetchWidgetConfigResponse.prototype.getLastbasis = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.tmq.FetchWidgetConfigResponse} returns this
 */
proto.tmq.FetchWidgetConfigResponse.prototype.setLastbasis = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tmq.WidgetConfigResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tmq.WidgetConfigResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tmq.WidgetConfigResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.WidgetConfigResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tmq.WidgetConfigResponse}
 */
proto.tmq.WidgetConfigResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tmq.WidgetConfigResponse;
  return proto.tmq.WidgetConfigResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tmq.WidgetConfigResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tmq.WidgetConfigResponse}
 */
proto.tmq.WidgetConfigResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tmq.WidgetConfigResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tmq.WidgetConfigResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tmq.WidgetConfigResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.WidgetConfigResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.tmq.WidgetConfigResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tmq.WidgetConfigResponse} returns this
 */
proto.tmq.WidgetConfigResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.tmq.WidgetConfigResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.WidgetConfigResponse} returns this
 */
proto.tmq.WidgetConfigResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.tmq);
export default proto.tmq;
