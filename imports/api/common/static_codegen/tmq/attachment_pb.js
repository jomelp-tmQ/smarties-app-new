// source: tmq/attachment.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
var tmq_inbox_pb = require('../tmq/inbox_pb.js');
goog.object.extend(proto, tmq_inbox_pb);
goog.exportSymbol('proto.tmq.Attachment', null, global);
goog.exportSymbol('proto.tmq.AttachmentAttribute', null, global);
goog.exportSymbol('proto.tmq.DeleteAttachmentRequest', null, global);
goog.exportSymbol('proto.tmq.DeleteAttachmentResponse', null, global);
goog.exportSymbol('proto.tmq.GetAttachmentsByInboxIdsRequest', null, global);
goog.exportSymbol('proto.tmq.GetAttachmentsResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tmq.AttachmentAttribute = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tmq.AttachmentAttribute, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tmq.AttachmentAttribute.displayName = 'proto.tmq.AttachmentAttribute';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tmq.Attachment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tmq.Attachment.repeatedFields_, null);
};
goog.inherits(proto.tmq.Attachment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tmq.Attachment.displayName = 'proto.tmq.Attachment';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tmq.GetAttachmentsByInboxIdsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tmq.GetAttachmentsByInboxIdsRequest.repeatedFields_, null);
};
goog.inherits(proto.tmq.GetAttachmentsByInboxIdsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tmq.GetAttachmentsByInboxIdsRequest.displayName = 'proto.tmq.GetAttachmentsByInboxIdsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tmq.GetAttachmentsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tmq.GetAttachmentsResponse.repeatedFields_, null);
};
goog.inherits(proto.tmq.GetAttachmentsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tmq.GetAttachmentsResponse.displayName = 'proto.tmq.GetAttachmentsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tmq.DeleteAttachmentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tmq.DeleteAttachmentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tmq.DeleteAttachmentRequest.displayName = 'proto.tmq.DeleteAttachmentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tmq.DeleteAttachmentResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tmq.DeleteAttachmentResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tmq.DeleteAttachmentResponse.displayName = 'proto.tmq.DeleteAttachmentResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tmq.AttachmentAttribute.prototype.toObject = function(opt_includeInstance) {
  return proto.tmq.AttachmentAttribute.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tmq.AttachmentAttribute} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.AttachmentAttribute.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: (f = msg.getValue()) && google_protobuf_any_pb.Any.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tmq.AttachmentAttribute}
 */
proto.tmq.AttachmentAttribute.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tmq.AttachmentAttribute;
  return proto.tmq.AttachmentAttribute.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tmq.AttachmentAttribute} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tmq.AttachmentAttribute}
 */
proto.tmq.AttachmentAttribute.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tmq.AttachmentAttribute.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tmq.AttachmentAttribute.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tmq.AttachmentAttribute} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.AttachmentAttribute.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.tmq.AttachmentAttribute.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.AttachmentAttribute} returns this
 */
proto.tmq.AttachmentAttribute.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Any value = 2;
 * @return {?proto.google.protobuf.Any}
 */
proto.tmq.AttachmentAttribute.prototype.getValue = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 2));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.tmq.AttachmentAttribute} returns this
*/
proto.tmq.AttachmentAttribute.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tmq.AttachmentAttribute} returns this
 */
proto.tmq.AttachmentAttribute.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tmq.AttachmentAttribute.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tmq.Attachment.repeatedFields_ = [17];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tmq.Attachment.prototype.toObject = function(opt_includeInstance) {
  return proto.tmq.Attachment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tmq.Attachment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.Attachment.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    businessId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    inboxId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    interactionId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    consumerId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    channelId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    originalName: jspb.Message.getFieldWithDefault(msg, 7, ""),
    fileSize: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    mimeType: jspb.Message.getFieldWithDefault(msg, 9, ""),
    fileExtension: jspb.Message.getFieldWithDefault(msg, 10, ""),
    localPath: jspb.Message.getFieldWithDefault(msg, 11, ""),
    localUrl: jspb.Message.getFieldWithDefault(msg, 12, ""),
    remoteUrl: jspb.Message.getFieldWithDefault(msg, 13, ""),
    source: jspb.Message.getFieldWithDefault(msg, 14, ""),
    recordingId: jspb.Message.getFieldWithDefault(msg, 15, ""),
    createdAt: jspb.Message.getFloatingPointFieldWithDefault(msg, 16, 0.0),
    attributesList: jspb.Message.toObjectList(msg.getAttributesList(),
    proto.tmq.AttachmentAttribute.toObject, includeInstance),
    thumbnailUrl: jspb.Message.getFieldWithDefault(msg, 18, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tmq.Attachment}
 */
proto.tmq.Attachment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tmq.Attachment;
  return proto.tmq.Attachment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tmq.Attachment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tmq.Attachment}
 */
proto.tmq.Attachment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setInboxId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setInteractionId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setConsumerId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setOriginalName(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFileSize(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setMimeType(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileExtension(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocalPath(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocalUrl(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteUrl(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecordingId(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCreatedAt(value);
      break;
    case 17:
      var value = new proto.tmq.AttachmentAttribute;
      reader.readMessage(value,proto.tmq.AttachmentAttribute.deserializeBinaryFromReader);
      msg.addAttributes(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setThumbnailUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tmq.Attachment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tmq.Attachment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tmq.Attachment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.Attachment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBusinessId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getInboxId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getInteractionId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getConsumerId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getChannelId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getOriginalName();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getFileSize();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getMimeType();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getFileExtension();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getLocalPath();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getLocalUrl();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getRemoteUrl();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getRecordingId();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0.0) {
    writer.writeDouble(
      16,
      f
    );
  }
  f = message.getAttributesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      17,
      f,
      proto.tmq.AttachmentAttribute.serializeBinaryToWriter
    );
  }
  f = message.getThumbnailUrl();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.tmq.Attachment.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.Attachment} returns this
 */
proto.tmq.Attachment.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string business_id = 2;
 * @return {string}
 */
proto.tmq.Attachment.prototype.getBusinessId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.Attachment} returns this
 */
proto.tmq.Attachment.prototype.setBusinessId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string inbox_id = 3;
 * @return {string}
 */
proto.tmq.Attachment.prototype.getInboxId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.Attachment} returns this
 */
proto.tmq.Attachment.prototype.setInboxId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string interaction_id = 4;
 * @return {string}
 */
proto.tmq.Attachment.prototype.getInteractionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.Attachment} returns this
 */
proto.tmq.Attachment.prototype.setInteractionId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string consumer_id = 5;
 * @return {string}
 */
proto.tmq.Attachment.prototype.getConsumerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.Attachment} returns this
 */
proto.tmq.Attachment.prototype.setConsumerId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string channel_id = 6;
 * @return {string}
 */
proto.tmq.Attachment.prototype.getChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.Attachment} returns this
 */
proto.tmq.Attachment.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string original_name = 7;
 * @return {string}
 */
proto.tmq.Attachment.prototype.getOriginalName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.Attachment} returns this
 */
proto.tmq.Attachment.prototype.setOriginalName = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional double file_size = 8;
 * @return {number}
 */
proto.tmq.Attachment.prototype.getFileSize = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.tmq.Attachment} returns this
 */
proto.tmq.Attachment.prototype.setFileSize = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional string mime_type = 9;
 * @return {string}
 */
proto.tmq.Attachment.prototype.getMimeType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.Attachment} returns this
 */
proto.tmq.Attachment.prototype.setMimeType = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string file_extension = 10;
 * @return {string}
 */
proto.tmq.Attachment.prototype.getFileExtension = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.Attachment} returns this
 */
proto.tmq.Attachment.prototype.setFileExtension = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string local_path = 11;
 * @return {string}
 */
proto.tmq.Attachment.prototype.getLocalPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.Attachment} returns this
 */
proto.tmq.Attachment.prototype.setLocalPath = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string local_url = 12;
 * @return {string}
 */
proto.tmq.Attachment.prototype.getLocalUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.Attachment} returns this
 */
proto.tmq.Attachment.prototype.setLocalUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string remote_url = 13;
 * @return {string}
 */
proto.tmq.Attachment.prototype.getRemoteUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.Attachment} returns this
 */
proto.tmq.Attachment.prototype.setRemoteUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string source = 14;
 * @return {string}
 */
proto.tmq.Attachment.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.Attachment} returns this
 */
proto.tmq.Attachment.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string recording_id = 15;
 * @return {string}
 */
proto.tmq.Attachment.prototype.getRecordingId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.Attachment} returns this
 */
proto.tmq.Attachment.prototype.setRecordingId = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional double created_at = 16;
 * @return {number}
 */
proto.tmq.Attachment.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 16, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.tmq.Attachment} returns this
 */
proto.tmq.Attachment.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3FloatField(this, 16, value);
};


/**
 * repeated AttachmentAttribute attributes = 17;
 * @return {!Array<!proto.tmq.AttachmentAttribute>}
 */
proto.tmq.Attachment.prototype.getAttributesList = function() {
  return /** @type{!Array<!proto.tmq.AttachmentAttribute>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tmq.AttachmentAttribute, 17));
};


/**
 * @param {!Array<!proto.tmq.AttachmentAttribute>} value
 * @return {!proto.tmq.Attachment} returns this
*/
proto.tmq.Attachment.prototype.setAttributesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 17, value);
};


/**
 * @param {!proto.tmq.AttachmentAttribute=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tmq.AttachmentAttribute}
 */
proto.tmq.Attachment.prototype.addAttributes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 17, opt_value, proto.tmq.AttachmentAttribute, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tmq.Attachment} returns this
 */
proto.tmq.Attachment.prototype.clearAttributesList = function() {
  return this.setAttributesList([]);
};


/**
 * optional string thumbnail_url = 18;
 * @return {string}
 */
proto.tmq.Attachment.prototype.getThumbnailUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.Attachment} returns this
 */
proto.tmq.Attachment.prototype.setThumbnailUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tmq.GetAttachmentsByInboxIdsRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tmq.GetAttachmentsByInboxIdsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tmq.GetAttachmentsByInboxIdsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tmq.GetAttachmentsByInboxIdsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.GetAttachmentsByInboxIdsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    inboxIdsList: jspb.Message.toObjectList(msg.getInboxIdsList(),
    tmq_inbox_pb.InboxIds.toObject, includeInstance),
    page: (f = msg.getPage()) && tmq_inbox_pb.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tmq.GetAttachmentsByInboxIdsRequest}
 */
proto.tmq.GetAttachmentsByInboxIdsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tmq.GetAttachmentsByInboxIdsRequest;
  return proto.tmq.GetAttachmentsByInboxIdsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tmq.GetAttachmentsByInboxIdsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tmq.GetAttachmentsByInboxIdsRequest}
 */
proto.tmq.GetAttachmentsByInboxIdsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new tmq_inbox_pb.InboxIds;
      reader.readMessage(value,tmq_inbox_pb.InboxIds.deserializeBinaryFromReader);
      msg.addInboxIds(value);
      break;
    case 2:
      var value = new tmq_inbox_pb.Pagination;
      reader.readMessage(value,tmq_inbox_pb.Pagination.deserializeBinaryFromReader);
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tmq.GetAttachmentsByInboxIdsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tmq.GetAttachmentsByInboxIdsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tmq.GetAttachmentsByInboxIdsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.GetAttachmentsByInboxIdsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInboxIdsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      tmq_inbox_pb.InboxIds.serializeBinaryToWriter
    );
  }
  f = message.getPage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      tmq_inbox_pb.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * repeated InboxIds inbox_ids = 1;
 * @return {!Array<!proto.tmq.InboxIds>}
 */
proto.tmq.GetAttachmentsByInboxIdsRequest.prototype.getInboxIdsList = function() {
  return /** @type{!Array<!proto.tmq.InboxIds>} */ (
    jspb.Message.getRepeatedWrapperField(this, tmq_inbox_pb.InboxIds, 1));
};


/**
 * @param {!Array<!proto.tmq.InboxIds>} value
 * @return {!proto.tmq.GetAttachmentsByInboxIdsRequest} returns this
*/
proto.tmq.GetAttachmentsByInboxIdsRequest.prototype.setInboxIdsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tmq.InboxIds=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tmq.InboxIds}
 */
proto.tmq.GetAttachmentsByInboxIdsRequest.prototype.addInboxIds = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tmq.InboxIds, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tmq.GetAttachmentsByInboxIdsRequest} returns this
 */
proto.tmq.GetAttachmentsByInboxIdsRequest.prototype.clearInboxIdsList = function() {
  return this.setInboxIdsList([]);
};


/**
 * optional Pagination page = 2;
 * @return {?proto.tmq.Pagination}
 */
proto.tmq.GetAttachmentsByInboxIdsRequest.prototype.getPage = function() {
  return /** @type{?proto.tmq.Pagination} */ (
    jspb.Message.getWrapperField(this, tmq_inbox_pb.Pagination, 2));
};


/**
 * @param {?proto.tmq.Pagination|undefined} value
 * @return {!proto.tmq.GetAttachmentsByInboxIdsRequest} returns this
*/
proto.tmq.GetAttachmentsByInboxIdsRequest.prototype.setPage = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tmq.GetAttachmentsByInboxIdsRequest} returns this
 */
proto.tmq.GetAttachmentsByInboxIdsRequest.prototype.clearPage = function() {
  return this.setPage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tmq.GetAttachmentsByInboxIdsRequest.prototype.hasPage = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tmq.GetAttachmentsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tmq.GetAttachmentsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tmq.GetAttachmentsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tmq.GetAttachmentsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.GetAttachmentsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    attachmentsList: jspb.Message.toObjectList(msg.getAttachmentsList(),
    proto.tmq.Attachment.toObject, includeInstance),
    totalCount: jspb.Message.getFieldWithDefault(msg, 2, 0),
    success: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    errorMessage: jspb.Message.getFieldWithDefault(msg, 4, ""),
    lastBasis: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tmq.GetAttachmentsResponse}
 */
proto.tmq.GetAttachmentsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tmq.GetAttachmentsResponse;
  return proto.tmq.GetAttachmentsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tmq.GetAttachmentsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tmq.GetAttachmentsResponse}
 */
proto.tmq.GetAttachmentsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tmq.Attachment;
      reader.readMessage(value,proto.tmq.Attachment.deserializeBinaryFromReader);
      msg.addAttachments(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalCount(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorMessage(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLastBasis(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tmq.GetAttachmentsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tmq.GetAttachmentsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tmq.GetAttachmentsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.GetAttachmentsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAttachmentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.tmq.Attachment.serializeBinaryToWriter
    );
  }
  f = message.getTotalCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLastBasis();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
};


/**
 * repeated Attachment attachments = 1;
 * @return {!Array<!proto.tmq.Attachment>}
 */
proto.tmq.GetAttachmentsResponse.prototype.getAttachmentsList = function() {
  return /** @type{!Array<!proto.tmq.Attachment>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tmq.Attachment, 1));
};


/**
 * @param {!Array<!proto.tmq.Attachment>} value
 * @return {!proto.tmq.GetAttachmentsResponse} returns this
*/
proto.tmq.GetAttachmentsResponse.prototype.setAttachmentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tmq.Attachment=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tmq.Attachment}
 */
proto.tmq.GetAttachmentsResponse.prototype.addAttachments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tmq.Attachment, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tmq.GetAttachmentsResponse} returns this
 */
proto.tmq.GetAttachmentsResponse.prototype.clearAttachmentsList = function() {
  return this.setAttachmentsList([]);
};


/**
 * optional int32 total_count = 2;
 * @return {number}
 */
proto.tmq.GetAttachmentsResponse.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.tmq.GetAttachmentsResponse} returns this
 */
proto.tmq.GetAttachmentsResponse.prototype.setTotalCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool success = 3;
 * @return {boolean}
 */
proto.tmq.GetAttachmentsResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tmq.GetAttachmentsResponse} returns this
 */
proto.tmq.GetAttachmentsResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string error_message = 4;
 * @return {string}
 */
proto.tmq.GetAttachmentsResponse.prototype.getErrorMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.GetAttachmentsResponse} returns this
 */
proto.tmq.GetAttachmentsResponse.prototype.setErrorMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional double last_basis = 5;
 * @return {number}
 */
proto.tmq.GetAttachmentsResponse.prototype.getLastBasis = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.tmq.GetAttachmentsResponse} returns this
 */
proto.tmq.GetAttachmentsResponse.prototype.setLastBasis = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tmq.DeleteAttachmentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tmq.DeleteAttachmentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tmq.DeleteAttachmentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.DeleteAttachmentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    attachmentId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tmq.DeleteAttachmentRequest}
 */
proto.tmq.DeleteAttachmentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tmq.DeleteAttachmentRequest;
  return proto.tmq.DeleteAttachmentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tmq.DeleteAttachmentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tmq.DeleteAttachmentRequest}
 */
proto.tmq.DeleteAttachmentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAttachmentId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tmq.DeleteAttachmentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tmq.DeleteAttachmentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tmq.DeleteAttachmentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.DeleteAttachmentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAttachmentId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string attachment_id = 1;
 * @return {string}
 */
proto.tmq.DeleteAttachmentRequest.prototype.getAttachmentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.DeleteAttachmentRequest} returns this
 */
proto.tmq.DeleteAttachmentRequest.prototype.setAttachmentId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tmq.DeleteAttachmentResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tmq.DeleteAttachmentResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tmq.DeleteAttachmentResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.DeleteAttachmentResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    errorMessage: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tmq.DeleteAttachmentResponse}
 */
proto.tmq.DeleteAttachmentResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tmq.DeleteAttachmentResponse;
  return proto.tmq.DeleteAttachmentResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tmq.DeleteAttachmentResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tmq.DeleteAttachmentResponse}
 */
proto.tmq.DeleteAttachmentResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tmq.DeleteAttachmentResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tmq.DeleteAttachmentResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tmq.DeleteAttachmentResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tmq.DeleteAttachmentResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.tmq.DeleteAttachmentResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tmq.DeleteAttachmentResponse} returns this
 */
proto.tmq.DeleteAttachmentResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string error_message = 2;
 * @return {string}
 */
proto.tmq.DeleteAttachmentResponse.prototype.getErrorMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tmq.DeleteAttachmentResponse} returns this
 */
proto.tmq.DeleteAttachmentResponse.prototype.setErrorMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.tmq);
export default proto.tmq;
